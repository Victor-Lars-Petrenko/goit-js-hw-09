{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,gBAEvC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEtCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAS,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbN,EAAKa,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACFZ,EAAQa,UAAW,EACnB,IAAIC,EAAQC,OAAOlB,EAAKmB,SAASb,MAAMc,OACvC,MAAMC,EAAOH,OAAOlB,EAAKmB,SAASE,KAAKD,OACjCE,EAASJ,OAAOlB,EAAKmB,SAASG,OAAOF,OAC3ChB,EAAc,EAAGa,GAChBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA0B,OAAOC,QAAQ,qBAAqBpB,QAAeC,MAAU,IAG9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA0B,OAAOG,QAAQ,oBAAoBtB,QAAeC,MAAU,IAG9D,IAAK,IAAIsB,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChCX,GAASI,EACTjB,EAAcwB,EAAGX,GAChBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA0B,OAAOC,QAAQ,qBAAqBpB,QAAeC,MAAU,IAG9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA0B,OAAOG,QAAQ,oBAAoBtB,QAAeC,MAAU,IAIhEI,YAAW,KACTP,EAAQa,UAAW,EACnBhB,EAAK6B,OAAO,GACVX,OAAOlB,EAAKmB,SAASb,MAAMc,OAASC,EAAOC,EAAS,IAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst formBtn = document.querySelector('.form button');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, rejected) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay })\n    } else {\n      rejected({ position, delay })\n    }\n    }, delay)\n  })\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  formBtn.disabled = true;\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n  createPromise(1, delay)\n  .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  for (let i = 2; i <= amount; i += 1) {\n    delay += step;\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n  setTimeout(() => {\n    formBtn.disabled = false;\n    form.reset();\n  }, (Number(form.elements.delay.value) + step * amount + 3000));\n})"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","rejected","setTimeout","Math","random","addEventListener","e","preventDefault","disabled","delay1","Number","elements","value","step","amount","then","Notify","success","catch","failure","i","reset"],"version":3,"file":"03-promises.319e5ead.js.map"}